import java.io.File
import kotlin.math.round

/**
 * This script generates size system and adjusts it to some constant GlobalFactor.
 * It is easier to translate px from figma to dp this way if 1:1 ratio doesn't work well.
 */
val GLOBAL_FACTOR: Double = 1.15

/**
 * Sizes, would be translated to dp.
 */
val sizes =
    listOf(
        Dimen.Size(2),
        Dimen.Size(6),
        Dimen.Size(8),
        Dimen.Size(10),
        Dimen.Size(12),
        Dimen.Size(14),
        Dimen.Size(16),
        Dimen.Size(20),
        Dimen.Size(22),
        Dimen.Size(24),
        Dimen.Size(32),
        Dimen.Size(36),
        Dimen.Size(40),
        Dimen.Size(48),
        Dimen.Size(50),
        Dimen.Size(64),
        Dimen.Size(132),
        Dimen.Size(256),
    )

/**
 * Text sizes, would be translated to sp.
 * Have second factor parameter for convenient line heights.
 */
val texts =
    listOf(
        Dimen.Text(7),
        Dimen.Text(7, 1.10),
        Dimen.Text(10),
        Dimen.Text(10, 1.10),
        Dimen.Text(14),
        Dimen.Text(14, 1.20),
        Dimen.Text(14, 1.30),
        Dimen.Text(16),
        Dimen.Text(16, 1.20),
        Dimen.Text(16, 1.30),
        Dimen.Text(20),
        Dimen.Text(20, 1.20),
        Dimen.Text(22),
        Dimen.Text(22, 1.20),
    )

val file = File("src/main/res/values/dimens.xml")
file.delete()
file.createNewFile()

sealed interface Dimen {
    data class Size(val size: Int) : Dimen
    data class Text(val size: Int, val factor: Double = 1.0) : Dimen
}

fun Double.round(decimals: Int): Double {
    var multiplier = 1.0
    repeat(decimals) { multiplier *= 10 }
    return round(this * multiplier) / multiplier
}

fun addTag(name: String, value: String) {
    file.appendText("    <dimen name=\"$name\">$value</dimen>\n")
}

fun addSize(size: Dimen.Size) {
    addTag("size_x${size.size}", "${(size.size * GLOBAL_FACTOR).round(2)}dp")
}

fun addText(size: Dimen.Text) {
    val name =
            if (size.factor == 1.0) {
                "text_x${size.size}"
            } else {
                "text_x${size.size}_${(size.factor * 100).toInt()}"
            }
    addTag(name, "${(size.size * size.factor * GLOBAL_FACTOR).round(2)}sp")
}

fun addDimen(dimen: Dimen) {
    when (dimen) {
        is Dimen.Size -> addSize(dimen)
        is Dimen.Text -> addText(dimen)
    }
}

file.appendText("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n")
file.appendText("<!-- This file was generated by dimens[.kts] and should not be edited by hand. -->\n\n")

file.appendText("<resources>\n")
sizes.forEach { addDimen(it) }
file.appendText("\n")
texts.forEach { addDimen(it) }
file.appendText("</resources>")
